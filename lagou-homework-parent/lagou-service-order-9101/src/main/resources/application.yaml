#server
server:
  port: 9101    #当前应用访问端口

#spring
spring:
  application:
    name: lagou-service-order         #项目名称(微服务中唯一标识)
  datasource:                         #数据源信息
    url: jdbc:mysql://localhost:3306/lagou?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
    username: root
    password: root
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss  #post请求全局日期转换(未验证)
    time-zone: GMT+8

#分页查询
pagehelper:
  helper-dialect: mysql     #方言

#映射配置文件
mybatis:
  mapper-locations: classpath:com/lagou/order/mapper/*.xml  #配置MyBatis的xml配置文件路径
  type-aliases-package: com.lagou.common                    #配置XML映射文件中指定的实体类别名路径
  configuration:
    map-underscore-to-camel-case: true                      #驼峰命名

#eureka
eureka:
  instance:
    prefer-ip-address: true       #使用ip注册，否则会使用主机名注册了（此处考虑到对老版本的兼容，新版本经过实验都是ip）
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@ #自定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress
    lease-renewal-interval-in-seconds: 30     #租约续约间隔时间，默认30秒
    lease-expiration-duration-in-seconds: 90  #租约到期，服务有效时间，默认值90秒,服务超过90秒没有发生心跳，EurekaServer会将服务从列表移除
  client:
    service-url:                        #eureka server 地址
      defaultZone: http://LagouCloudEurekaServerA:9300/eureka,http://LagouCloudEurekaServerB:9301/eureka
    register-with-eureka: true          #向Eureka中心注册自己的信息 (默认为true)
    fetch-registry: true                #从Eureka Server获取服务信息 (默认为true)
    registry-fetch-interval-seconds: 30 # 每隔多久拉取一次服务列表

#springboot中暴露健康检查等断点接口
management:
  endpoints:
    web:
      exposure:
        include: "*"
  # 暴露健康接口的细节
  endpoint:
    health:
      show-details: always
  #http://localhost:9101/actuator/health 访问地址

#Feign配置
feign:
  #开启Feign的熔断功能
  hystrix:
    enabled: true
  #开启请求和响应压缩
  compression:
    request:
      enabled: true #默认不开启
      mime-types: text/html,application/xml,application/json # 设置压缩的数据类型，此处也是默认值
      min-request-size: 2048 # 设置触发压缩的大小下限，此处也是默认值
    response:
      enabled: true #默认不开启

#Ribbon配置(ribbon的配置,Feign启用)
#针对的被调用方微服务名称,不加就是全局生效
lagou-service-goods:
  ribbon:
    #请求连接超时时间
    ConnectTimeout: 2000
    #请求处理超时时间
    ReadTimeout: 4000
    #对所有操作都进行重试
    OkToRetryOnAllOperations: true
    ####根据如上配置，当访问到故障请求的时候，它会再尝试访问一次当前实例（次数由MaxAutoRetries配置），
    ####如果不行，就换一个实例进行访问，如果还不行，再换一次实例访问（更换次数由MaxAutoRetriesNextServer配置），
    ####如果依然不行，返回失败信息。
    MaxAutoRetries: 0 #对当前选中实例重试次数，不包括第一次调用
    MaxAutoRetriesNextServer: 1 #切换实例的重试次数
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ZoneAvoidanceRule #负载策略 默认ZoneAvoidanceRule

#配置熔断策略：
hystrix:
  command:
    default:
      # === === === == 熔断器 === === === ==
      circuitBreaker:
        # 强制打开熔断器，如果该属性设置为true，强制断路器进入打开状态，将会拒绝所有的请求。默认false关闭的
        forceOpen: false
        # 熔断触发最小请求次数，默认值是20
        requestVolumeThreshold: 2
        # 触发熔断错误比例阈值，默认值50%
        errorThresholdPercentage: 50
        # 熔断后休眠时长，默认值5秒
        sleepWindowInMilliseconds: 3000
      execution:
        isolation:
          thread:
            # 熔断请求处理超时设置，默认为1秒
            timeoutInMilliseconds: 5000
  # === === === == 线程池 === === === ==
  threadpool:
    default:
      coreSize: 16 #并发执行的最大线程数，默认10
      maxQueueSize: 10000 #BlockingQueue的最大队列数，默认值-1
      queueSizeRejectionThreshold: 6000 #队列拒绝阈值:即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝，默认值5